{"version":3,"file":"es6.custom.dialog.bundle1.0.0.js","sources":["../es6.custom.dialog1.0.0.js"],"sourcesContent":["// js/es6.custom.dialog.js\n\n/**\n * CustomDialog 類\n * 這個類用於創建和管理自定義對話框。\n * \n * @class CustomDialog\n * @param {string} dialogContentSelector - 對話框內容的 CSS 選擇器\n * @param {Object} [options={}] - 配置選項\n * @param {string} [options.backdropStyle] - 對話框背景樣式\n * @param {string|string[]} [options.closeButtonSelectors] - 用於關閉對話框的按鈕選擇器\n */\n\nexport class CustomDialog {\n  constructor(dialogContentSelector, options = {}) {\n    this.dialogContent = document.querySelector(dialogContentSelector);\n    if (!this.dialogContent) {\n      throw new Error('Dialog content not found');\n    }\n\n    this.dialog = document.createElement('dialog');\n    this.dialog.appendChild(this.dialogContent);\n    document.body.appendChild(this.dialog);\n\n    this.setDialogStyles();\n    if (options.backdropStyle) {\n      this.setBackdropStyle(options.backdropStyle);\n    }\n\n    this.initializeEvents(options.closeButtonSelectors);\n  }\n\n  setDialogStyles() {\n    Object.assign(this.dialog.style, {\n      all: 'unset',\n      width: '100%',\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    });\n  }\n  \n  setBackdropStyle(style) {\n    let styleTag = document.getElementById('dynamicDialogStyles');\n    if (!styleTag) {\n      styleTag = document.createElement('style');\n      styleTag.id = 'dynamicDialogStyles';\n      document.head.appendChild(styleTag);\n    }\n    styleTag.textContent = `dialog::backdrop { ${style} }`;\n  }\n\n  showDialog() {\n    this.dialog.showModal();\n    this.dialogContent.style.display = 'block';\n  }\n\n  closeDialog() {\n    this.dialog.close();\n    this.dialogContent.style.display = 'none';\n  }\n\n  initializeEvents(closeButtonSelectors) {\n    if (!Array.isArray(closeButtonSelectors)) {\n      closeButtonSelectors = [closeButtonSelectors];\n    }\n\n    closeButtonSelectors.forEach(selector => {\n      const buttons = this.dialogContent.querySelectorAll(selector);\n      buttons.forEach(button => {\n        button.addEventListener('click', () => this.closeDialog());\n      });\n    });\n  }\n}\nwindow.CustomDialog = CustomDialog;"],"names":["CustomDialog","dialogContentSelector","options","arguments","length","undefined","_classCallCheck","this","dialogContent","document","querySelector","Error","dialog","createElement","appendChild","body","setDialogStyles","backdropStyle","setBackdropStyle","initializeEvents","closeButtonSelectors","key","value","Object","assign","style","all","width","position","top","left","transform","styleTag","getElementById","id","head","textContent","concat","showModal","display","close","_this","Array","isArray","forEach","selector","querySelectorAll","button","addEventListener","closeDialog","window"],"mappings":"4eAaA,IAAaA,EAAY,WAiBtB,SAhBD,SAAAA,EAAYC,GAAqC,IAAdC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAA,EAE3C,+FAF6CG,MAAAN,GAC7CO,KAAKC,cAAgBC,SAASC,cAAcT,IACvCM,KAAKC,cACR,MAAM,IAAIG,MAAM,4BAGlBJ,KAAKK,OAASH,SAASI,cAAc,UACrCN,KAAKK,OAAOE,YAAYP,KAAKC,eAC7BC,SAASM,KAAKD,YAAYP,KAAKK,QAE/BL,KAAKS,kBACDd,EAAQe,eACVV,KAAKW,iBAAiBhB,EAAQe,eAGhCV,KAAKY,iBAAiBjB,EAAQkB,qBAChC,KAAC,CAAA,CAAAC,IAAA,kBAAAC,MAED,WACEC,OAAOC,OAAOjB,KAAKK,OAAOa,MAAO,CAC/BC,IAAK,QACLC,MAAO,OACPC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEf,GAAC,CAAAV,IAAA,mBAAAC,MAED,SAAiBG,GACf,IAAIO,EAAWvB,SAASwB,eAAe,uBAClCD,KACHA,EAAWvB,SAASI,cAAc,UACzBqB,GAAK,sBACdzB,SAAS0B,KAAKrB,YAAYkB,IAE5BA,EAASI,YAAW,sBAAAC,OAAyBZ,EAAS,KACxD,GAAC,CAAAJ,IAAA,aAAAC,MAED,WACEf,KAAKK,OAAO0B,YACZ/B,KAAKC,cAAciB,MAAMc,QAAU,OACrC,GAAC,CAAAlB,IAAA,cAAAC,MAED,WACEf,KAAKK,OAAO4B,QACZjC,KAAKC,cAAciB,MAAMc,QAAU,MACrC,GAAC,CAAAlB,IAAA,mBAAAC,MAED,SAAiBF,GAAsB,IAAAqB,EAAAlC,KAChCmC,MAAMC,QAAQvB,KACjBA,EAAuB,CAACA,IAG1BA,EAAqBwB,SAAQ,SAAAC,GACXJ,EAAKjC,cAAcsC,iBAAiBD,GAC5CD,SAAQ,SAAAG,GACdA,EAAOC,iBAAiB,SAAS,WAAA,OAAMP,EAAKQ,gBAC9C,GACF,GACF,+FAAC,CA7DsB,GA+DzBC,OAAOlD,aAAeA"}